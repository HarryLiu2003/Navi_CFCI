steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/database-service', '.']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/database-service']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'database-service'
      - '--image=gcr.io/$PROJECT_ID/database-service'
      - '--region=us-central1'
      - '--platform=managed'
      - '--service-account=database-service@$PROJECT_ID.iam.gserviceaccount.com'
      - '--no-allow-unauthenticated'
      - '--set-env-vars=NODE_ENV=${_NODE_ENV}'
      - '--set-env-vars=DEBUG=${_DEBUG}'
      - '--set-env-vars=LOG_LEVEL=${_LOG_LEVEL}'
      # PORT is automatically set by Cloud Run (local development uses 5001)
      - '--set-env-vars=CORS_ORIGINS=${_CORS_ORIGINS}'
      - '--update-secrets=DATABASE_URL=database-connection-string:latest'
      - '--cpu=1'
      - '--memory=512Mi'
      - '--timeout=600s'
      - '--min-instances=0'
      - '--max-instances=2'
      - '--cpu-boost'
      
images:
  - 'gcr.io/$PROJECT_ID/database-service'

# Default substitutions - can be overridden during deployment
substitutions:
  _NODE_ENV: production
  _DEBUG: "false"
  _LOG_LEVEL: INFO
  _CORS_ORIGINS: https://navi-cfci.vercel.app

