datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x", "linux-musl-openssl-3.0.x", "windows", "darwin", "darwin-arm64"]
}

model Interview {
  id               String    @id @default(uuid())
  created_at       DateTime  @default(now())
  title            String
  problem_count    Int
  transcript_length Int
  analysis_data    Json
  project_id       String?
  interviewer      String?
  interview_date   DateTime?
  user             User?     @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId           String?

  @@map("interviews")
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String    @unique
  password      String
  sessions      Session[]
  interviews    Interview[]

  @@map("users")
}

// Note: VerificationToken is required for password reset functionality
// If you need that feature later, this model can be added back 